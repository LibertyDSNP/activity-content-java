package org.dsnp.activitycontent

import com.google.gson.FieldNamingStrategy
import com.google.gson.GsonBuilder
import io.mockk.mockk
import org.assertj.core.api.Assertions.assertThat
import org.dsnp.activitycontent.exception.ValidationException
import org.dsnp.activitycontent.model.*
import org.dsnp.activitycontent.test.ExtraData
import org.junit.jupiter.api.Assertions.assertThrows
import org.junit.jupiter.api.Test
import java.time.DateTimeException
import java.util.*

class ActivityContentTests {
    @Test
    fun parseNote_valid() {
        val json = this::class.java.getResource("/note_valid.json")!!.readText()
        val note = ActivityContent.parseNote(json, supportAdditionalFields = true)

        assertThat(note.context).isEqualTo("https://www.w3.org/ns/activitystreams")
        assertThat(note.type).isEqualTo("Note")
        assertThat(note.content).isEqualTo("test content")
        assertThat(note.name).isEqualTo("test name")
        assertThat(note.published).isEqualTo(Date(1000))

        // additional fields
        assertThat(note.getString("noteExtraField1")).isEqualTo("test value")
        assertThat(note.getInt("noteExtraField2")).isEqualTo(123)
        assertThat(note.getDouble("noteExtraField3")).isEqualTo(1.23)
        assertThat(note.getBoolean("noteExtraField4")).isTrue()
        assertThat(note.getObject("noteExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat(note.getObject("noteExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat(note.getList("noteExtraField6", Int::class.java)).hasSize(3)
        assertThat(note.getList("noteExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat(note.getList("noteExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat(note.getList("noteExtraField6", Int::class.java)!![2]).isEqualTo(3)
        assertThat(note.getObject("noteExtraField1", Date::class.java)).isNull()
        assertThat(note.getList("noteExtraField2", Any::class.java)).isNull()
        assertThat(note.getString("noteExtraField3")).isNull()
        assertThat(note.getInt("noteExtraField4")).isNull()
        assertThat(note.getDouble("noteExtraField5")).isNull()
        assertThat(note.getBoolean("noteExtraField6")).isNull()
        assertThat(note.getObject("nonExistentField", Date::class.java)).isNull()
        assertThat(note.getList("nonExistentField", Any::class.java)).isNull()
        assertThat(note.getString("nonExistentField")).isNull()
        assertThat(note.getInt("nonExistentField")).isNull()
        assertThat(note.getDouble("nonExistentField")).isNull()
        assertThat(note.getBoolean("nonExistentField")).isNull()

        // attachments
        assertThat(note.attachment).hasSize(4)
        // audio attachment
        assertThat(note.attachment!![0].type).isEqualTo("Audio")
        assertThat(note.attachment!![0].name).isEqualTo("example audio content 1")
        assertThat((note.attachment!![0] as ActivityContentAudio).duration).isEqualTo("PT11S")
        assertThat((note.attachment!![0] as ActivityContentAudio).url).hasSize(4)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.MP3)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.mp3")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getString("audioLinkExtraField1")).isEqualTo("test value")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getInt("audioLinkExtraField2")).isEqualTo(123)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getDouble("audioLinkExtraField3")).isEqualTo(1.23)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getBoolean("audioLinkExtraField4")).isTrue()
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getObject("audioLinkExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getObject("audioLinkExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getList("audioLinkExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getList("audioLinkExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getList("audioLinkExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getList("audioLinkExtraField6", Int::class.java)!![2]).isEqualTo(3)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.OGG)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.ogg")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.WebM)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.webm")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.Other("audio/flac"))
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.flac")
        assertThat((note.attachment!![0] as ActivityContentAudio).getString("audioExtraField1")).isEqualTo("test value")
        assertThat((note.attachment!![0] as ActivityContentAudio).getInt("audioExtraField2")).isEqualTo(123)
        assertThat((note.attachment!![0] as ActivityContentAudio).getDouble("audioExtraField3")).isEqualTo(1.23)
        assertThat((note.attachment!![0] as ActivityContentAudio).getBoolean("audioExtraField4")).isTrue()
        assertThat((note.attachment!![0] as ActivityContentAudio).getObject("audioExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.attachment!![0] as ActivityContentAudio).getObject("audioExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.attachment!![0] as ActivityContentAudio).getList("audioExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.attachment!![0] as ActivityContentAudio).getList("audioExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).getList("audioExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.attachment!![0] as ActivityContentAudio).getList("audioExtraField6", Int::class.java)!![2]).isEqualTo(3)
        // image attachment
        assertThat(note.attachment!![1].type).isEqualTo("Image")
        assertThat(note.attachment!![1].name).isEqualTo("example image content 1")
        assertThat((note.attachment!![1] as ActivityContentImage).url).hasSize(6)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].mediaType).isEqualTo(ActivityContentImageLink.MediaType.JPEG)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.jpeg")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getString("imageLinkExtraField1")).isEqualTo("test value")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getInt("imageLinkExtraField2")).isEqualTo(123)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getDouble("imageLinkExtraField3")).isEqualTo(1.23)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getBoolean("imageLinkExtraField4")).isTrue()
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getObject("imageLinkExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getObject("imageLinkExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getList("imageLinkExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getList("imageLinkExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getList("imageLinkExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getList("imageLinkExtraField6", Int::class.java)!![2]).isEqualTo(3)
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].mediaType).isEqualTo(ActivityContentImageLink.MediaType.PNG)
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.png")
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].mediaType).isEqualTo(ActivityContentImageLink.MediaType.SVG)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.svg")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].mediaType).isEqualTo(ActivityContentImageLink.MediaType.WebP)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.webp")
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].mediaType).isEqualTo(ActivityContentImageLink.MediaType.GIF)
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.gif")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].mediaType).isEqualTo(ActivityContentImageLink.MediaType.Other("image/bmp"))
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.bmp")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).getString("imageExtraField1")).isEqualTo("test value")
        assertThat((note.attachment!![1] as ActivityContentImage).getInt("imageExtraField2")).isEqualTo(123)
        assertThat((note.attachment!![1] as ActivityContentImage).getDouble("imageExtraField3")).isEqualTo(1.23)
        assertThat((note.attachment!![1] as ActivityContentImage).getBoolean("imageExtraField4")).isTrue()
        assertThat((note.attachment!![1] as ActivityContentImage).getObject("imageExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.attachment!![1] as ActivityContentImage).getObject("imageExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.attachment!![1] as ActivityContentImage).getList("imageExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.attachment!![1] as ActivityContentImage).getList("imageExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.attachment!![1] as ActivityContentImage).getList("imageExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.attachment!![1] as ActivityContentImage).getList("imageExtraField6", Int::class.java)!![2]).isEqualTo(3)
        // video attachment
        assertThat(note.attachment!![2].type).isEqualTo("Video")
        assertThat(note.attachment!![2].name).isEqualTo("example video content 1")
        assertThat((note.attachment!![2] as ActivityContentVideo).duration).isEqualTo("PT12S")
        assertThat((note.attachment!![2] as ActivityContentVideo).url).hasSize(6)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.MPEG)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.mpeg")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getString("videoLinkExtraField1")).isEqualTo("test value")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getInt("videoLinkExtraField2")).isEqualTo(123)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getDouble("videoLinkExtraField3")).isEqualTo(1.23)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getBoolean("videoLinkExtraField4")).isTrue()
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getObject("videoLinkExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getObject("videoLinkExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getList("videoLinkExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getList("videoLinkExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getList("videoLinkExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getList("videoLinkExtraField6", Int::class.java)!![2]).isEqualTo(3)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.OGG)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.ogg")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.WEBM)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.webm")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.H265)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.mov")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.MP4)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.mp4")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.Other("video/avi"))
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.avi")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).getString("videoExtraField1")).isEqualTo("test value")
        assertThat((note.attachment!![2] as ActivityContentVideo).getInt("videoExtraField2")).isEqualTo(123)
        assertThat((note.attachment!![2] as ActivityContentVideo).getDouble("videoExtraField3")).isEqualTo(1.23)
        assertThat((note.attachment!![2] as ActivityContentVideo).getBoolean("videoExtraField4")).isTrue()
        assertThat((note.attachment!![2] as ActivityContentVideo).getObject("videoExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.attachment!![2] as ActivityContentVideo).getObject("videoExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.attachment!![2] as ActivityContentVideo).getList("videoExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.attachment!![2] as ActivityContentVideo).getList("videoExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).getList("videoExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.attachment!![2] as ActivityContentVideo).getList("videoExtraField6", Int::class.java)!![2]).isEqualTo(3)
        // link attachment
        assertThat((note.attachment!![3] as ActivityContentLink).type).isEqualTo("Link")
        assertThat((note.attachment!![3] as ActivityContentLink).name).isEqualTo("some example link 1")
        assertThat((note.attachment!![3] as ActivityContentLink).href).isEqualTo("http://www.dsnp.org/someContent.html")
        assertThat((note.attachment!![3] as ActivityContentLink).getString("linkExtraField1")).isEqualTo("test value")
        assertThat((note.attachment!![3] as ActivityContentLink).getInt("linkExtraField2")).isEqualTo(123)
        assertThat((note.attachment!![3] as ActivityContentLink).getDouble("linkExtraField3")).isEqualTo(1.23)
        assertThat((note.attachment!![3] as ActivityContentLink).getBoolean("linkExtraField4")).isTrue()
        assertThat((note.attachment!![3] as ActivityContentLink).getObject("linkExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.attachment!![3] as ActivityContentLink).getObject("linkExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.attachment!![3] as ActivityContentLink).getList("linkExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.attachment!![3] as ActivityContentLink).getList("linkExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.attachment!![3] as ActivityContentLink).getList("linkExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.attachment!![3] as ActivityContentLink).getList("linkExtraField6", Int::class.java)!![2]).isEqualTo(3)
        // tags
        assertThat(note.tag).hasSize(2)
        assertThat((note.tag!![0] as ActivityContentMention).type).isEqualTo("Mention")
        assertThat((note.tag!![0] as ActivityContentMention).id).isEqualTo("dsnp://101")
        assertThat((note.tag!![0] as ActivityContentMention).name).isEqualTo("test name")
        assertThat((note.tag!![0] as ActivityContentMention).getString("mentionExtraField1")).isEqualTo("test value")
        assertThat((note.tag!![0] as ActivityContentMention).getInt("mentionExtraField2")).isEqualTo(123)
        assertThat((note.tag!![0] as ActivityContentMention).getDouble("mentionExtraField3")).isEqualTo(1.23)
        assertThat((note.tag!![0] as ActivityContentMention).getBoolean("mentionExtraField4")).isTrue()
        assertThat((note.tag!![0] as ActivityContentMention).getObject("mentionExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.tag!![0] as ActivityContentMention).getObject("mentionExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)!![2]).isEqualTo(3)
        assertThat((note.tag!![1] as ActivityContentHashtag).name).isEqualTo("#hashtag")
        assertThat((note.tag!![1] as ActivityContentHashtag).getString("hashtagExtraField1")).isEqualTo("test value")
        assertThat((note.tag!![1] as ActivityContentHashtag).getInt("hashtagExtraField2")).isEqualTo(123)
        assertThat((note.tag!![1] as ActivityContentHashtag).getDouble("hashtagExtraField3")).isEqualTo(1.23)
        assertThat((note.tag!![1] as ActivityContentHashtag).getBoolean("hashtagExtraField4")).isTrue()
        assertThat((note.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((note.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((note.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)).hasSize(3)
        assertThat((note.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((note.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((note.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)!![2]).isEqualTo(3)

        // location
        assertThat(note.location).isNotNull()
        assertThat(note.location!!.type).isEqualTo("Place")
        assertThat(note.location!!.name).isEqualTo("Test Location")
        assertThat(note.location!!.accuracy).isEqualTo(1f)
        assertThat(note.location!!.altitude).isEqualTo(70f)
        assertThat(note.location!!.latitude).isEqualTo(40.76567f)
        assertThat(note.location!!.longitude).isEqualTo(-73.980835f)
        assertThat(note.location!!.radius).isEqualTo(20f)
        assertThat(note.location!!.units).isEqualTo(ActivityContentLocation.Unit.METER)
        assertThat(note.location!!.getString("locationExtraField1")).isEqualTo("test value")
        assertThat(note.location!!.getInt("locationExtraField2")).isEqualTo(123)
        assertThat(note.location!!.getDouble("locationExtraField3")).isEqualTo(1.23)
        assertThat(note.location!!.getBoolean("locationExtraField4")).isTrue()
        assertThat(note.location!!.getObject("locationExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat(note.location!!.getObject("locationExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat(note.location!!.getList("locationExtraField6", Int::class.java)).hasSize(3)
        assertThat(note.location!!.getList("locationExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat(note.location!!.getList("locationExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat(note.location!!.getList("locationExtraField6", Int::class.java)!![2]).isEqualTo(3)
    }

    @Test
    fun parseNote_valid_no_extra_fields() {
        val json = this::class.java.getResource("/note_valid.json")!!.readText()
        val note = ActivityContent.parseNote(json)

        assertThat(note.context).isEqualTo("https://www.w3.org/ns/activitystreams")
        assertThat(note.type).isEqualTo("Note")
        assertThat(note.content).isEqualTo("test content")
        assertThat(note.name).isEqualTo("test name")
        assertThat(note.published).isEqualTo(Date(1000))

        // additional fields
        assertThat(note.getString("noteExtraField1")).isNull()
        assertThat(note.getInt("noteExtraField2")).isNull()
        assertThat(note.getDouble("noteExtraField3")).isNull()
        assertThat(note.getBoolean("noteExtraField4")).isNull()
        assertThat(note.getObject("noteExtraField5", Any::class.java)).isNull()
        assertThat(note.getObject("noteExtraField6", Any::class.java)).isNull()

        // attachments
        assertThat(note.attachment).hasSize(4)
        // audio attachment
        assertThat(note.attachment!![0].type).isEqualTo("Audio")
        assertThat(note.attachment!![0].name).isEqualTo("example audio content 1")
        assertThat((note.attachment!![0] as ActivityContentAudio).duration).isEqualTo("PT11S")
        assertThat((note.attachment!![0] as ActivityContentAudio).url).hasSize(4)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.MP3)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.mp3")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getString("audioLinkExtraField1")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getInt("audioLinkExtraField2")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getDouble("audioLinkExtraField3")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getBoolean("audioLinkExtraField4")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getObject("audioLinkExtraField5", Any::class.java)).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).url[0].getObject("audioLinkExtraField6", Any::class.java)).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.OGG)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[1].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.ogg")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.WebM)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[2].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.webm")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].mediaType).isEqualTo(ActivityContentAudioLink.MediaType.Other("audio/flac"))
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].hash).hasSize(1)
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![0] as ActivityContentAudio).url[3].href).isEqualTo("http://www.dsnp.org/exampleAudioContent1.flac")
        assertThat((note.attachment!![0] as ActivityContentAudio).getString("audioExtraField1")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).getInt("audioExtraField2")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).getDouble("audioExtraField3")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).getBoolean("audioExtraField4")).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).getObject("audioExtraField5", Any::class.java)).isNull()
        assertThat((note.attachment!![0] as ActivityContentAudio).getObject("audioExtraField6", Any::class.java)).isNull()
        // image attachment
        assertThat(note.attachment!![1].type).isEqualTo("Image")
        assertThat(note.attachment!![1].name).isEqualTo("example image content 1")
        assertThat((note.attachment!![1] as ActivityContentImage).url).hasSize(6)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].mediaType).isEqualTo(ActivityContentImageLink.MediaType.JPEG)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.jpeg")
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getString("imageLinkExtraField1")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getInt("imageLinkExtraField2")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getDouble("imageLinkExtraField3")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getBoolean("imageLinkExtraField4")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getObject("imageLinkExtraField5", Any::class.java)).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).url[0].getObject("imageLinkExtraField6", Any::class.java)).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].mediaType).isEqualTo(ActivityContentImageLink.MediaType.PNG)
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.png")
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[1].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].mediaType).isEqualTo(ActivityContentImageLink.MediaType.SVG)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.svg")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].mediaType).isEqualTo(ActivityContentImageLink.MediaType.WebP)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.webp")
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[3].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].mediaType).isEqualTo(ActivityContentImageLink.MediaType.GIF)
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[4].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.gif")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].mediaType).isEqualTo(ActivityContentImageLink.MediaType.Other("image/bmp"))
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].hash).hasSize(1)
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].href).isEqualTo("http://www.dsnp.org/exampleImageContent1.bmp")
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[5].width).isEqualTo(200)
        assertThat((note.attachment!![1] as ActivityContentImage).getString("imageExtraField1")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).getInt("imageExtraField2")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).getDouble("imageExtraField3")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).getBoolean("imageExtraField4")).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).getObject("imageExtraField5", Any::class.java)).isNull()
        assertThat((note.attachment!![1] as ActivityContentImage).getObject("imageExtraField6", Any::class.java)).isNull()
        // video attachment
        assertThat(note.attachment!![2].type).isEqualTo("Video")
        assertThat(note.attachment!![2].name).isEqualTo("example video content 1")
        assertThat((note.attachment!![2] as ActivityContentVideo).duration).isEqualTo("PT12S")
        assertThat((note.attachment!![2] as ActivityContentVideo).url).hasSize(6)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.MPEG)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.mpeg")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getString("videoLinkExtraField1")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getInt("videoLinkExtraField2")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getDouble("videoLinkExtraField3")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getBoolean("videoLinkExtraField4")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getObject("videoLinkExtraField5", Any::class.java)).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).url[0].getObject("videoLinkExtraField6", Any::class.java)).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.OGG)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.ogg")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[1].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.WEBM)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[2].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.webm")
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].height).isEqualTo(100)
        assertThat((note.attachment!![1] as ActivityContentImage).url[2].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.H265)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.mov")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[3].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.MP4)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.mp4")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[4].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].mediaType).isEqualTo(ActivityContentVideoLink.MediaType.Other("video/avi"))
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].hash).hasSize(1)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].hash[0].algorithm).isEqualTo("keccak256")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].href).isEqualTo("http://www.dsnp.org/exampleVideoContent1.avi")
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].height).isEqualTo(100)
        assertThat((note.attachment!![2] as ActivityContentVideo).url[5].width).isEqualTo(200)
        assertThat((note.attachment!![2] as ActivityContentVideo).getString("videoExtraField1")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).getInt("videoExtraField2")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).getDouble("videoExtraField3")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).getBoolean("videoExtraField4")).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).getObject("videoExtraField5", Any::class.java)).isNull()
        assertThat((note.attachment!![2] as ActivityContentVideo).getObject("videoExtraField6", Any::class.java)).isNull()
        // link attachment
        assertThat((note.attachment!![3] as ActivityContentLink).type).isEqualTo("Link")
        assertThat((note.attachment!![3] as ActivityContentLink).name).isEqualTo("some example link 1")
        assertThat((note.attachment!![3] as ActivityContentLink).href).isEqualTo("http://www.dsnp.org/someContent.html")
        assertThat((note.attachment!![3] as ActivityContentLink).getString("linkExtraField1")).isNull()
        assertThat((note.attachment!![3] as ActivityContentLink).getInt("linkExtraField2")).isNull()
        assertThat((note.attachment!![3] as ActivityContentLink).getDouble("linkExtraField3")).isNull()
        assertThat((note.attachment!![3] as ActivityContentLink).getBoolean("linkExtraField4")).isNull()
        assertThat((note.attachment!![3] as ActivityContentLink).getObject("linkExtraField5", Any::class.java)).isNull()
        assertThat((note.attachment!![3] as ActivityContentLink).getObject("linkExtraField6", Any::class.java)).isNull()
        // tags
        assertThat(note.tag).hasSize(2)
        assertThat((note.tag!![0] as ActivityContentMention).type).isEqualTo("Mention")
        assertThat((note.tag!![0] as ActivityContentMention).id).isEqualTo("dsnp://101")
        assertThat((note.tag!![0] as ActivityContentMention).name).isEqualTo("test name")
        assertThat((note.tag!![0] as ActivityContentMention).getString("mentionExtraField1")).isNull()
        assertThat((note.tag!![0] as ActivityContentMention).getInt("mentionExtraField2")).isNull()
        assertThat((note.tag!![0] as ActivityContentMention).getDouble("mentionExtraField3")).isNull()
        assertThat((note.tag!![0] as ActivityContentMention).getBoolean("mentionExtraField4")).isNull()
        assertThat((note.tag!![0] as ActivityContentMention).getObject("mentionExtraField5", Any::class.java)).isNull()
        assertThat((note.tag!![0] as ActivityContentMention).getObject("mentionExtraField6", Any::class.java)).isNull()
        assertThat((note.tag!![1] as ActivityContentHashtag).name).isEqualTo("#hashtag")
        assertThat((note.tag!![1] as ActivityContentHashtag).getString("hashtagExtraField1")).isNull()
        assertThat((note.tag!![1] as ActivityContentHashtag).getInt("hashtagExtraField2")).isNull()
        assertThat((note.tag!![1] as ActivityContentHashtag).getDouble("hashtagExtraField3")).isNull()
        assertThat((note.tag!![1] as ActivityContentHashtag).getBoolean("hashtagExtraField4")).isNull()
        assertThat((note.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField5", Any::class.java)).isNull()
        assertThat((note.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField6", Any::class.java)).isNull()

        // location
        assertThat(note.location).isNotNull()
        assertThat(note.location!!.type).isEqualTo("Place")
        assertThat(note.location!!.name).isEqualTo("Test Location")
        assertThat(note.location!!.accuracy).isEqualTo(1f)
        assertThat(note.location!!.altitude).isEqualTo(70f)
        assertThat(note.location!!.latitude).isEqualTo(40.76567f)
        assertThat(note.location!!.longitude).isEqualTo(-73.980835f)
        assertThat(note.location!!.radius).isEqualTo(20f)
        assertThat(note.location!!.units).isEqualTo(ActivityContentLocation.Unit.METER)
        assertThat(note.location!!.getString("locationExtraField1")).isNull()
        assertThat(note.location!!.getInt("locationExtraField2")).isNull()
        assertThat(note.location!!.getDouble("locationExtraField3")).isNull()
        assertThat(note.location!!.getBoolean("locationExtraField4")).isNull()
        assertThat(note.location!!.getObject("locationExtraField5", Any::class.java)).isNull()
        assertThat(note.location!!.getObject("locationExtraField6", Any::class.java)).isNull()
    }

    @Test
    fun parseNote_invalid_date() {
        val exception = assertThrows(
            ValidationException::class.java
        ) {
            val json = this::class.java.getResource("/note_invalid_date.json")!!.readText()
            ActivityContent.parseNote(json)
        }

        assertThat(exception.message).isEqualTo("Invalid json")
        assertThat(exception.cause).isInstanceOf(DateTimeException::class.java)
    }

    @Test
    fun parseNote_invalid_attachment() {
        val exception = assertThrows(
            ValidationException::class.java
        ) {
            val json = this::class.java.getResource("/note_invalid_attachment.json")!!.readText()
            ActivityContent.parseNote(json)
        }
        assertThat(exception.message).isEqualTo("Invalid json")
        assertThat(exception.cause).isInstanceOf(ValidationException::class.java)
        assertThat(exception.cause!!.message).isEqualTo("Invalid type for attachment: File")
    }

    @Test
    fun parseNote_invalid_audio_mime_type() {
        val exception = assertThrows(
            ValidationException::class.java
        ) {
            val json = this::class.java.getResource("/note_invalid_audio_type.json")!!.readText()
            ActivityContent.parseNote(json)
        }
        assertThat(exception.message).isEqualTo("Invalid json")
        assertThat(exception.cause).isInstanceOf(ValidationException::class.java)
        assertThat(exception.cause!!.message).isEqualTo("Invalid audio MIME type: image/png")
    }

    @Test
    fun parseNote_invalid_image_mime_type() {
        val exception = assertThrows(
            ValidationException::class.java
        ) {
            val json = this::class.java.getResource("/note_invalid_image_type.json")!!.readText()
            ActivityContent.parseNote(json)
        }
        assertThat(exception.message).isEqualTo("Invalid json")
        assertThat(exception.cause).isInstanceOf(ValidationException::class.java)
        assertThat(exception.cause!!.message).isEqualTo("Invalid image MIME type: audio/mpeg")
    }

    @Test
    fun parseNote_invalid_video_mime_type() {
        val exception = assertThrows(
            ValidationException::class.java
        ) {
            val json = this::class.java.getResource("/note_invalid_video_type.json")!!.readText()
            ActivityContent.parseNote(json)
        }
        assertThat(exception.message).isEqualTo("Invalid json")
        assertThat(exception.cause).isInstanceOf(ValidationException::class.java)
        assertThat(exception.cause!!.message).isEqualTo("Invalid video MIME type: image/png")
    }

    @Test
    fun parseProfile_valid() {
        val json = this::class.java.getResource("/profile_valid.json")!!.readText()
        val profile = ActivityContent.parseProfile(json, supportAdditionalFields = true)

        assertThat(profile.context).isEqualTo("https://www.w3.org/ns/activitystreams")
        assertThat(profile.type).isEqualTo("Profile")
        assertThat(profile.name).isEqualTo("user 1")
        assertThat(profile.published).isEqualTo(Date(1000))
        assertThat(profile.summary).isEqualTo("a new user with user name 'user 1'")
        // location
        assertThat(profile.location).isNotNull()
        assertThat(profile.location!!.type).isEqualTo("Place")
        assertThat(profile.location!!.name).isEqualTo("Test Location")
        assertThat(profile.location!!.accuracy).isEqualTo(1f)
        assertThat(profile.location!!.altitude).isEqualTo(70f)
        assertThat(profile.location!!.latitude).isEqualTo(40.76567f)
        assertThat(profile.location!!.longitude).isEqualTo(-73.980835f)
        assertThat(profile.location!!.radius).isEqualTo(20f)
        assertThat(profile.location!!.units).isEqualTo(ActivityContentLocation.Unit.METER)
        assertThat(profile.location!!.getString("locationExtraField1")).isEqualTo("test value")
        assertThat(profile.location!!.getInt("locationExtraField2")).isEqualTo(123)
        assertThat(profile.location!!.getDouble("locationExtraField3")).isEqualTo(1.23)
        assertThat(profile.location!!.getBoolean("locationExtraField4")).isTrue()
        assertThat(profile.location!!.getObject("locationExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat(profile.location!!.getObject("locationExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat(profile.location!!.getList("locationExtraField6", Int::class.java)).hasSize(3)
        assertThat(profile.location!!.getList("locationExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat(profile.location!!.getList("locationExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat(profile.location!!.getList("locationExtraField6", Int::class.java)!![2]).isEqualTo(3)
        // tags
        assertThat(profile.tag).hasSize(2)
        assertThat((profile.tag!![0] as ActivityContentMention).type).isEqualTo("Mention")
        assertThat((profile.tag!![0] as ActivityContentMention).id).isEqualTo("dsnp://101")
        assertThat((profile.tag!![0] as ActivityContentMention).name).isEqualTo("test name")
        assertThat((profile.tag!![0] as ActivityContentMention).getString("mentionExtraField1")).isEqualTo("test value")
        assertThat((profile.tag!![0] as ActivityContentMention).getInt("mentionExtraField2")).isEqualTo(123)
        assertThat((profile.tag!![0] as ActivityContentMention).getDouble("mentionExtraField3")).isEqualTo(1.23)
        assertThat((profile.tag!![0] as ActivityContentMention).getBoolean("mentionExtraField4")).isTrue()
        assertThat((profile.tag!![0] as ActivityContentMention).getObject("mentionExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((profile.tag!![0] as ActivityContentMention).getObject("mentionExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((profile.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)).hasSize(3)
        assertThat((profile.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((profile.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((profile.tag!![0] as ActivityContentMention).getList("mentionExtraField6", Int::class.java)!![2]).isEqualTo(3)
        assertThat((profile.tag!![1] as ActivityContentHashtag).name).isEqualTo("#hashtag")
        assertThat((profile.tag!![1] as ActivityContentHashtag).getString("hashtagExtraField1")).isEqualTo("test value")
        assertThat((profile.tag!![1] as ActivityContentHashtag).getInt("hashtagExtraField2")).isEqualTo(123)
        assertThat((profile.tag!![1] as ActivityContentHashtag).getDouble("hashtagExtraField3")).isEqualTo(1.23)
        assertThat((profile.tag!![1] as ActivityContentHashtag).getBoolean("hashtagExtraField4")).isTrue()
        assertThat((profile.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat((profile.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat((profile.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)).hasSize(3)
        assertThat((profile.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat((profile.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat((profile.tag!![1] as ActivityContentHashtag).getList("hashtagExtraField6", Int::class.java)!![2]).isEqualTo(3)
        // icons
        assertThat(profile.icon).hasSize(6)
        assertThat(profile.icon!![0].mediaType).isEqualTo(ActivityContentImageLink.MediaType.JPEG)
        assertThat(profile.icon!![0].hash).hasSize(1)
        assertThat(profile.icon!![0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![0].href).isEqualTo("http://www.dsnp.org/user1Image.jpeg")
        assertThat(profile.icon!![0].height).isEqualTo(100)
        assertThat(profile.icon!![0].width).isEqualTo(200)
        assertThat(profile.icon!![0].getString("iconExtraField1")).isEqualTo("test value")
        assertThat(profile.icon!![0].getInt("iconExtraField2")).isEqualTo(123)
        assertThat(profile.icon!![0].getDouble("iconExtraField3")).isEqualTo(1.23)
        assertThat(profile.icon!![0].getBoolean("iconExtraField4")).isTrue()
        assertThat(profile.icon!![0].getObject("iconExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat(profile.icon!![0].getObject("iconExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat(profile.icon!![0].getList("iconExtraField6", Int::class.java)).hasSize(3)
        assertThat(profile.icon!![0].getList("iconExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat(profile.icon!![0].getList("iconExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat(profile.icon!![0].getList("iconExtraField6", Int::class.java)!![2]).isEqualTo(3)
        assertThat(profile.icon!![1].mediaType).isEqualTo(ActivityContentImageLink.MediaType.PNG)
        assertThat(profile.icon!![1].hash).hasSize(1)
        assertThat(profile.icon!![1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![1].href).isEqualTo("http://www.dsnp.org/user1Image.png")
        assertThat(profile.icon!![1].height).isEqualTo(100)
        assertThat(profile.icon!![1].width).isNull()
        assertThat(profile.icon!![2].mediaType).isEqualTo(ActivityContentImageLink.MediaType.SVG)
        assertThat(profile.icon!![2].hash).hasSize(1)
        assertThat(profile.icon!![2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![2].href).isEqualTo("http://www.dsnp.org/user1Image.svg")
        assertThat(profile.icon!![2].height).isNull()
        assertThat(profile.icon!![2].width).isEqualTo(200)
        assertThat(profile.icon!![3].mediaType).isEqualTo(ActivityContentImageLink.MediaType.WebP)
        assertThat(profile.icon!![3].hash).hasSize(1)
        assertThat(profile.icon!![3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![3].href).isEqualTo("http://www.dsnp.org/user1Image.webp")
        assertThat(profile.icon!![3].height).isNull()
        assertThat(profile.icon!![3].width).isNull()
        assertThat(profile.icon!![4].mediaType).isEqualTo(ActivityContentImageLink.MediaType.GIF)
        assertThat(profile.icon!![4].hash).hasSize(1)
        assertThat(profile.icon!![4].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![4].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![4].href).isEqualTo("http://www.dsnp.org/user1Image.gif")
        assertThat(profile.icon!![5].mediaType).isEqualTo(ActivityContentImageLink.MediaType.Other("image/bmp"))
        assertThat(profile.icon!![5].hash).hasSize(1)
        assertThat(profile.icon!![5].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![5].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![5].href).isEqualTo("http://www.dsnp.org/user1Image.bmp")
        assertThat(profile.icon!![5].height).isEqualTo(100)
        assertThat(profile.icon!![5].width).isEqualTo(200)
        // additional fields
        assertThat(profile.getString("profileExtraField1")).isEqualTo("test value")
        assertThat(profile.getInt("profileExtraField2")).isEqualTo(123)
        assertThat(profile.getDouble("profileExtraField3")).isEqualTo(1.23)
        assertThat(profile.getBoolean("profileExtraField4")).isTrue()
        assertThat(profile.getObject("profileExtraField5", ExtraData::class.java)!!.value1).isEqualTo("value1")
        assertThat(profile.getObject("profileExtraField5", ExtraData::class.java)!!.value2).isEqualTo(123)
        assertThat(profile.getList("profileExtraField6", Int::class.java)).hasSize(3)
        assertThat(profile.getList("profileExtraField6", Int::class.java)!![0]).isEqualTo(1)
        assertThat(profile.getList("profileExtraField6", Int::class.java)!![1]).isEqualTo(2)
        assertThat(profile.getList("profileExtraField6", Int::class.java)!![2]).isEqualTo(3)
    }

    @Test
    fun parseProfile_valid_no_extra_fields() {
        val json = this::class.java.getResource("/profile_valid.json")!!.readText()
        val profile = ActivityContent.parseProfile(json)

        assertThat(profile.context).isEqualTo("https://www.w3.org/ns/activitystreams")
        assertThat(profile.type).isEqualTo("Profile")
        assertThat(profile.name).isEqualTo("user 1")
        assertThat(profile.published).isEqualTo(Date(1000))
        assertThat(profile.summary).isEqualTo("a new user with user name 'user 1'")
        // location
        assertThat(profile.location).isNotNull()
        assertThat(profile.location!!.type).isEqualTo("Place")
        assertThat(profile.location!!.name).isEqualTo("Test Location")
        assertThat(profile.location!!.accuracy).isEqualTo(1f)
        assertThat(profile.location!!.altitude).isEqualTo(70f)
        assertThat(profile.location!!.latitude).isEqualTo(40.76567f)
        assertThat(profile.location!!.longitude).isEqualTo(-73.980835f)
        assertThat(profile.location!!.radius).isEqualTo(20f)
        assertThat(profile.location!!.units).isEqualTo(ActivityContentLocation.Unit.METER)
        assertThat(profile.location!!.getString("locationExtraField1")).isNull()
        assertThat(profile.location!!.getInt("locationExtraField2")).isNull()
        assertThat(profile.location!!.getDouble("locationExtraField3")).isNull()
        assertThat(profile.location!!.getBoolean("locationExtraField4")).isNull()
        assertThat(profile.location!!.getObject("locationExtraField5", Any::class.java)).isNull()
        assertThat(profile.location!!.getObject("locationExtraField6", Any::class.java)).isNull()
        // tags
        assertThat(profile.tag).hasSize(2)
        assertThat((profile.tag!![0] as ActivityContentMention).type).isEqualTo("Mention")
        assertThat((profile.tag!![0] as ActivityContentMention).id).isEqualTo("dsnp://101")
        assertThat((profile.tag!![0] as ActivityContentMention).name).isEqualTo("test name")
        assertThat((profile.tag!![0] as ActivityContentMention).getString("mentionExtraField1")).isNull()
        assertThat((profile.tag!![0] as ActivityContentMention).getInt("mentionExtraField2")).isNull()
        assertThat((profile.tag!![0] as ActivityContentMention).getDouble("mentionExtraField3")).isNull()
        assertThat((profile.tag!![0] as ActivityContentMention).getBoolean("mentionExtraField4")).isNull()
        assertThat((profile.tag!![0] as ActivityContentMention).getObject("mentionExtraField5", Any::class.java)).isNull()
        assertThat((profile.tag!![0] as ActivityContentMention).getObject("mentionExtraField6", Any::class.java)).isNull()
        assertThat((profile.tag!![1] as ActivityContentHashtag).name).isEqualTo("#hashtag")
        assertThat((profile.tag!![1] as ActivityContentHashtag).getString("hashtagExtraField1")).isNull()
        assertThat((profile.tag!![1] as ActivityContentHashtag).getInt("hashtagExtraField2")).isNull()
        assertThat((profile.tag!![1] as ActivityContentHashtag).getDouble("hashtagExtraField3")).isNull()
        assertThat((profile.tag!![1] as ActivityContentHashtag).getBoolean("hashtagExtraField4")).isNull()
        assertThat((profile.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField5", Any::class.java)).isNull()
        assertThat((profile.tag!![1] as ActivityContentHashtag).getObject("hashtagExtraField6", Any::class.java)).isNull()
        // icons
        assertThat(profile.icon).hasSize(6)
        assertThat(profile.icon!![0].mediaType).isEqualTo(ActivityContentImageLink.MediaType.JPEG)
        assertThat(profile.icon!![0].hash).hasSize(1)
        assertThat(profile.icon!![0].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![0].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![0].href).isEqualTo("http://www.dsnp.org/user1Image.jpeg")
        assertThat(profile.icon!![0].height).isEqualTo(100)
        assertThat(profile.icon!![0].width).isEqualTo(200)
        assertThat(profile.icon!![0].getString("iconExtraField1")).isNull()
        assertThat(profile.icon!![0].getInt("iconExtraField2")).isNull()
        assertThat(profile.icon!![0].getDouble("iconExtraField3")).isNull()
        assertThat(profile.icon!![0].getBoolean("iconExtraField4")).isNull()
        assertThat(profile.icon!![0].getObject("iconExtraField5", Any::class.java)).isNull()
        assertThat(profile.icon!![0].getObject("iconExtraField6", Any::class.java)).isNull()
        assertThat(profile.icon!![1].mediaType).isEqualTo(ActivityContentImageLink.MediaType.PNG)
        assertThat(profile.icon!![1].hash).hasSize(1)
        assertThat(profile.icon!![1].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![1].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![1].href).isEqualTo("http://www.dsnp.org/user1Image.png")
        assertThat(profile.icon!![1].height).isEqualTo(100)
        assertThat(profile.icon!![1].width).isNull()
        assertThat(profile.icon!![2].mediaType).isEqualTo(ActivityContentImageLink.MediaType.SVG)
        assertThat(profile.icon!![2].hash).hasSize(1)
        assertThat(profile.icon!![2].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![2].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![2].href).isEqualTo("http://www.dsnp.org/user1Image.svg")
        assertThat(profile.icon!![2].height).isNull()
        assertThat(profile.icon!![2].width).isEqualTo(200)
        assertThat(profile.icon!![3].mediaType).isEqualTo(ActivityContentImageLink.MediaType.WebP)
        assertThat(profile.icon!![3].hash).hasSize(1)
        assertThat(profile.icon!![3].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![3].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![3].href).isEqualTo("http://www.dsnp.org/user1Image.webp")
        assertThat(profile.icon!![3].height).isNull()
        assertThat(profile.icon!![3].width).isNull()
        assertThat(profile.icon!![4].mediaType).isEqualTo(ActivityContentImageLink.MediaType.GIF)
        assertThat(profile.icon!![4].hash).hasSize(1)
        assertThat(profile.icon!![4].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![4].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![4].href).isEqualTo("http://www.dsnp.org/user1Image.gif")
        assertThat(profile.icon!![5].mediaType).isEqualTo(ActivityContentImageLink.MediaType.Other("image/bmp"))
        assertThat(profile.icon!![5].hash).hasSize(1)
        assertThat(profile.icon!![5].hash[0].value).isEqualTo("0xabcdef0000000000000000000000000000000000000000000000000000000000")
        assertThat(profile.icon!![5].hash[0].algorithm).isEqualTo("keccak256")
        assertThat(profile.icon!![5].href).isEqualTo("http://www.dsnp.org/user1Image.bmp")
        assertThat(profile.icon!![5].height).isEqualTo(100)
        assertThat(profile.icon!![5].width).isEqualTo(200)
        // additional fields
        assertThat(profile.getString("profileExtraField1")).isNull()
        assertThat(profile.getInt("profileExtraField2")).isNull()
        assertThat(profile.getDouble("profileExtraField3")).isNull()
        assertThat(profile.getBoolean("profileExtraField4")).isNull()
        assertThat(profile.getObject("profileExtraField5", Any::class.java)).isNull()
        assertThat(profile.getObject("profileExtraField6", Any::class.java)).isNull()
    }

    @Test
    fun parseProfile_invalid_date() {
        val exception = assertThrows(
            ValidationException::class.java
        ) {
            val json = this::class.java.getResource("/profile_invalid_date.json")!!.readText()
            ActivityContent.parseProfile(json)
        }

        assertThat(exception.message).isEqualTo("Invalid json")
        assertThat(exception.cause).isInstanceOf(DateTimeException::class.java)
    }

    @Test
    fun buildOutputGson() {
        val fieldNamingStrategy = mockk<FieldNamingStrategy>()
        val inGson = GsonBuilder()
            .setFieldNamingStrategy(fieldNamingStrategy)
            .create()
        val outGson = ActivityContent.buildOutputGson(inGson)
        // Assert that the configuration of the passed in Gson instance is the same as the configuration of the returned Gson.
        assertThat(outGson.fieldNamingStrategy()).isSameAs(fieldNamingStrategy)
    }

    @Test
    fun buildInputGson() {
        val fieldNamingStrategy = mockk<FieldNamingStrategy>()
        val inGson = GsonBuilder()
            .setFieldNamingStrategy(fieldNamingStrategy)
            .create()
        val outGson = ActivityContent.buildInputGson(false, inGson)
        // Assert that the configuration of the passed in Gson instance is the same as the configuration of the returned Gson.
        assertThat(outGson.fieldNamingStrategy()).isSameAs(fieldNamingStrategy)
    }
}